---

- hosts: all
  become: true

  vars:
    suffix: _backup

  tasks:
    - name: Remove '/' from the end of first_run (if exists)
      set_fact:
        first_run: "{{ destination_dir if destination_dir[-1] != '/' else destination_dir[:-1] }}"

    - name: get input data from the input.yml and store it in 'input'
      include_vars:
        file: input.yml
        name: input

    - name: convert 'input' to a list of dictionaries
      set_fact:
        input: |
          {% set res = [] -%}
          {% for key in input.keys() -%}
            {% for value in input[key] -%}
              {% set ignored = res.extend([{'dest': key, 'file':value}]) -%}
            {%- endfor %}
          {%- endfor %}
          {{ res }}

    - name: Compress files before copying
      shell: "cd {{ '/'.join([item.file.path, item.file.folder]) }} && tar --selinux -cf {{ item.file.file_name }}{{ suffix }}.tar {{ item.file.file_name }}"
      when: "{{ item.file.when }}"
      loop: "{{ input }}"

    - name: copy compressed files to their destinations
      fetch:
        src: "{{ '/'.join( [ item.file.path, item.file.folder, item.file.file_name + suffix ] ) }}.tar"
        dest: "{{ '/'.join( [ destination_dir, item.dest, '' ] ) }}"
        mode: "{{ item.file.mode }}"
        owner: "{{ item.file.owner }}"
        group: "{{ item.file.group }}"
      when: "{{ item.file.when }}"
      loop: "{{ input }}"

    - name: Get a list of all files in the destination dir (the compressed files)
      local_action:
        module: find
        paths: "{{ destination_dir }}"
        recurse: yes
      register: files_list

    - name: Extract compressed files
      local_action: "shell tar --selinux -xf {{ item.path }} -C {{ item.path[::-1].split('/', 1)[-1][::-1] + '/' }}"
      loop: "{{ files_list.files }}"
      when: "{{ item.path.endswith(suffix + '.tar') }}"

    - name: remove compressed files on the local machine
      local_action:
        module: file
        path: "{{ item.path }}"
        state: absent
      loop: "{{ files_list.files }}"
      when: "{{ item.path.endswith(suffix + '.tar') }}"

    - name: remove compressed files on the remote machines
      file:
        path: "{{ '/'.join( [ item.file.path, item.file.folder, item.file.file_name + suffix ] ) }}.tar"
        state: absent
      loop: "{{ input }}"
